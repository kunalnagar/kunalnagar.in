$theme-map: null;

@mixin theme() {
  @each $theme, $map in $themes {
    // $theme: darkTheme, lightTheme
    // $map: ('text-color': ..., 'bg-color': ...)

    // make the $map globally accessible, so that theme-get() can access it
    $theme-map: $map !global;

    // make a class for each theme using interpolation -> #{}
    // use & for making the theme class ancestor of the class
    // from which you use @include theme() {...}
    .#{$theme} & {
      @content; // the content inside @include theme() {...}
    }
  }
  // no use of the variable $theme-map now
  $theme-map: null !global;
}

@function theme-get($key) {
  @return map-get($theme-map, $key);
}

$themes: (
  light: (
    'html-background-color': #e1e1e1,
    'border-color': #ddd,
    'background-color': #ffffff,
    'box-shadow': 0 0 5px 2px #cdcdcd,
    'text-color': #222,
    'text-color-muted': #747474,
    'link-color': #000,
    'link-bg-color-hover': #fffaf1,
    'link-color-hover': #0056b3,
    'logo-fill': #000000,
    'hr-color': rgb(238, 238, 238),
    'code-color': #e83e8c,
    'code-pre-background-color': #f6f6f6,
    'cookie-monster-color': #0073bd,
    'color-blue-100': #dbf0ff,
    'color-blue-300': #9ed4fa,
  ),
  dark: (
    'html-background-color': #626262,
    'border-color': rgb(234, 234, 234),
    'background-color': #434343,
    'box-shadow': 0 0 5px 2px #332e2e,
    'text-color': #d3e0ec,
    'text-color-muted': #d9d9d9,
    'link-color': #81c5ff,
    'link-color-hover': #3d96f6,
    'logo-fill': #ffffff,
    'hr-color': #909090,
    'code-color': #ff9ac8,
    'code-pre-background-color': #000000,
    'cookie-monster-color': #0073bd,
    'color-blue-100': #343f47,
    'color-blue-300': #9ed4fa,
  ),
);
